name: docker-build

on:
  push:
    branches: [ main ]
    paths:
      - "docker/**"
      - "requirements.txt"
      - "constraints.txt"
      - "pyproject.toml"
      - "src/**"
      - "Makefile"
      - ".github/workflows/docker.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "docker/**"
      - "requirements.txt"
      - "constraints.txt"
      - "pyproject.toml"
      - "src/**"
      - "Makefile"
      - ".github/workflows/docker.yml"

env:
  # image name must be lowercase for GHCR
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  DOCKERFILE: docker/Dockerfile
  CONTEXT: .

concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write        # required to push to GHCR
      id-token: write        # provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase image name
        id: img
        run: |
          set -euo pipefail
          echo "name=${IMAGE_NAME,,}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Only login on push to the main repo (not from forks/PRs)
      - name: Login to GHCR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Produce tags/labels from branch, tag, and SHA
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.img.outputs.name }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=kansas-geo-timeline
            org.opencontainers.image.description=Time · Terrain · History mapping system for Kansas (Earth + Web)
            org.opencontainers.image.licenses=MIT

      - name: Build (PR) / Build & Push (main)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          # add more platforms if your base images support them
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # BuildKit cache (greatly speeds up rebuilds)
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Supply common build args (VERSION + GDAL base image pin)
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            GDAL_IMAGE=ghcr.io/osgeo/gdal:ubuntu-small-latest
          # Supply SBOM + provenance
          provenance: mode=max
          sbom: true

      # Optional: attest after push (requires push true)
      # - name: Attest (provenance+sbom)
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ steps.img.outputs.name }}
      #     subject-digest: ${{ steps.meta.outputs.digest }}
      #     push-to-registry: true
