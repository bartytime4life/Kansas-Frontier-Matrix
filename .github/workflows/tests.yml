name: Tests

on:
  push:
    branches: [ main ]
    paths:
      - "tests/**"
      - "stac/**"
      - "web/**"
      - "data/**"
      - "scripts/**"
      - "pyproject.toml"
      - "requirements.txt"
      - "requirements-dev.txt"
      - ".github/workflows/tests.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "tests/**"
      - "stac/**"
      - "web/**"
      - "data/**"
      - "scripts/**"
      - "pyproject.toml"
      - "requirements.txt"
      - "requirements-dev.txt"
      - ".github/workflows/tests.yml"
  workflow_dispatch:

jobs:
  pytest:
    name: Pytest (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: >-
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ hashFiles('**/requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            # Minimal deps for our tests
            pip install -q pytest jsonschema
            # Optional extras if present
            if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          fi
          python -c "import sys,pytest, jsonschema; print('pytest', pytest.__version__)"

      - name: Run tests
        run: |
          set -euo pipefail
          mkdir -p .artifacts
          pytest -q --junitxml=.artifacts/pytest-report.xml

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-py${{ matrix.python-version }}
          path: .artifacts/pytest-report.xml
