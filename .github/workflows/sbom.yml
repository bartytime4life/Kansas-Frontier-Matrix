# .github/workflows/sbom.yml
name: SBOM

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - "**/*.md"
      - "**/*.png"
      - "**/*.jpg"
      - "**/*.jpeg"
      - "**/*.svg"
      - "**/*.gif"
      - "**/*.webp"
      - "docs/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE/**"
  pull_request:
    branches: [ main ]
  schedule:
    # Weekly refresh (Sunday 03:15 UTC)
    - cron: "15 3 * * 0"

permissions:
  contents: write          # needed to attach assets on tag builds
  security-events: write   # SARIF upload (Grype)
  id-token: write          # OIDC for attestations

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  repo-sbom:
    name: Generate SBOM (repo)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      OUT_DIR: artifacts/sbom/repo
      SYFT_VERSION: v1.18.1   # pin for determinism; bump via Dependabot

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false

      - name: Setup Syft
        uses: anchore/syft-action/setup-syft@v1
        with:
          syft-version: ${{ env.SYFT_VERSION }}

      - name: Ensure output dir
        run: mkdir -p "$OUT_DIR"

      - name: Create CycloneDX (repo)
        run: syft dir:. -o cyclonedx-json="${OUT_DIR}/sbom.cdx.json"

      - name: Create SPDX (repo)
        run: syft dir:. -o spdx-json="${OUT_DIR}/sbom.spdx.json"

      - name: Quick stats → Summary
        shell: bash
        run: |
          {
            echo "## Repo SBOM"
            echo "- Syft: $(syft version | head -n1)"
            echo "- CycloneDX bytes: $(wc -c < "${OUT_DIR}/sbom.cdx.json")"
            echo "- SPDX bytes: $(wc -c < "${OUT_DIR}/sbom.spdx.json")"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upload SBOM artifacts (repo)
        uses: actions/upload-artifact@v4
        with:
          name: sbom-repo-${{ github.sha }}
          path: artifacts/sbom/repo
          if-no-files-found: error
          retention-days: 30

      - name: Attest SBOM artifacts (repo)
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: artifacts/sbom/repo/**

      # Vulnerability report on the repo (best-effort, non-blocking)
      - name: Vulnerability scan (repo – Grype)
        id: grype_repo
        continue-on-error: true
        uses: anchore/scan-action@v4
        with:
          path: .
          fail-build: false
          severity-cutoff: high
          output-format: sarif
          output-file: artifacts/sbom/repo/grype-repo.sarif

      - name: Upload SARIF (repo vulns)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: artifacts/sbom/repo/grype-repo.sarif
          category: repo-sbom-grype

  image-sbom:
    name: Generate SBOM (image)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: repo-sbom
    if: |
      hashFiles('Dockerfile') != '' || hashFiles('docker/Dockerfile') != ''
    env:
      OUT_DIR: artifacts/sbom/image
      IMAGE_NAME: kfm-sbom:${{ github.sha }}
      SYFT_VERSION: v1.18.1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx (cache)
        uses: docker/setup-buildx-action@v3

      - name: Determine Dockerfile path
        id: df
        shell: bash
        run: |
          if [ -f Dockerfile ]; then
            echo "path=Dockerfile" >> "$GITHUB_OUTPUT"
            echo "ctx=."         >> "$GITHUB_OUTPUT"
          elif [ -f docker/Dockerfile ]; then
            echo "path=docker/Dockerfile" >> "$GITHUB_OUTPUT"
            echo "ctx=docker"             >> "$GITHUB_OUTPUT"
          else
            echo "::error::No Dockerfile found"; exit 1
          fi

      - name: Build image (local, cached)
        uses: docker/build-push-action@v6
        with:
          context: ${{ steps.df.outputs.ctx }}
          file: ${{ steps.df.outputs.path }}
          tags: ${{ env.IMAGE_NAME }}
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup Syft
        uses: anchore/syft-action/setup-syft@v1
        with:
          syft-version: ${{ env.SYFT_VERSION }}

      - name: Ensure output dir
        run: mkdir -p "$OUT_DIR"

      - name: Create CycloneDX (image)
        run: syft "${IMAGE_NAME}" -o cyclonedx-json="${OUT_DIR}/sbom.image.cdx.json"

      - name: Create SPDX (image)
        run: syft "${IMAGE_NAME}" -o spdx-json="${OUT_DIR}/sbom.image.spdx.json"

      - name: Quick stats → Summary
        shell: bash
        run: |
          {
            echo "## Image SBOM"
            echo "- Image: ${IMAGE_NAME}"
            echo "- CycloneDX bytes: $(wc -c < "${OUT_DIR}/sbom.image.cdx.json")"
            echo "- SPDX bytes: $(wc -c < "${OUT_DIR}/sbom.image.spdx.json")"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upload SBOM artifacts (image)
        uses: actions/upload-artifact@v4
        with:
          name: sbom-image-${{ github.sha }}
          path: artifacts/sbom/image
          if-no-files-found: error
          retention-days: 30

      - name: Attest SBOM artifacts (image)
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: artifacts/sbom/image/**

      - name: Vulnerability scan (image – Grype)
        id: grype_img
        continue-on-error: true
        uses: anchore/scan-action@v4
        with:
          image: ${{ env.IMAGE_NAME }}
          fail-build: false
          severity-cutoff: high
          output-format: sarif
          output-file: artifacts/sbom/image/grype-image.sarif

      - name: Upload SARIF (image vulns)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: artifacts/sbom/image/grype-image.sarif
          category: image-sbom-grype

  release-attach:
    name: Attach SBOMs to Release (tag builds)
    runs-on: ubuntu-latest
    needs: [repo-sbom, image-sbom]
    if: startsWith(github.ref, 'refs/tags/')
    timeout-minutes: 10
    steps:
      - name: Download SBOM artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: sbom-*
          merge-multiple: true
          path: ./_all_sboms

      - name: Attach to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            _all_sboms/**/*.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
