# .github/workflows/sbom.yml
name: SBOM

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - "**/*.md"
      - "**/*.png"
      - "**/*.jpg"
      - "**/*.jpeg"
      - "**/*.svg"
      - "**/*.gif"
      - "**/*.webp"
      - "docs/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE/**"
  pull_request:
    branches: [ main ]
  schedule:
    # Weekly refresh (Sunday 03:15 UTC)
    - cron: "15 3 * * 0"

permissions:
  contents: read
  security-events: write   # for SARIF upload (vuln reports)
  id-token: write          # for artifact attestations

concurrency:
  group: sbom-${{ github.ref }}
  cancel-in-progress: true

jobs:
  repo-sbom:
    name: Generate SBOM (repo)
    runs-on: ubuntu-latest
    env:
      OUT_DIR: artifacts/sbom/repo

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Avoid pulling LFS blobs (faster, SBOM scans metadata too)
          lfs: false

      - name: Setup Syft
        uses: anchore/syft-action/setup-syft@v1

      - name: Ensure output dir
        run: mkdir -p "$OUT_DIR"

      - name: Create CycloneDX (repo)
        run: syft dir:. -o cyclonedx-json="${OUT_DIR}/sbom.cdx.json"

      - name: Create SPDX (repo)
        run: syft dir:. -o spdx-json="${OUT_DIR}/sbom.spdx.json"

      - name: Quick stats to Job Summary
        run: |
          echo "## Repo SBOM" >> "$GITHUB_STEP_SUMMARY"
          wc -c "${OUT_DIR}/sbom.cdx.json" | awk '{print "- CycloneDX size:", $1, "bytes"}' >> "$GITHUB_STEP_SUMMARY"
          wc -c "${OUT_DIR}/sbom.spdx.json" | awk '{print "- SPDX size:", $1, "bytes"}' >> "$GITHUB_STEP_SUMMARY"

      - name: Upload SBOM artifacts (repo)
        uses: actions/upload-artifact@v4
        with:
          name: sbom-repo-${{ github.sha }}
          path: artifacts/sbom/repo
          if-no-files-found: error
          retention-days: 14

      - name: Attest SBOM artifacts (repo)
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: artifacts/sbom/repo/**

      - name: (Optional) Vulnerability scan (repo – Grype)
        uses: anchore/scan-action@v4
        with:
          path: .
          fail-build: false                  # report only; do not fail CI here
          severity-cutoff: high
          output-format: sarif
          output-file: artifacts/sbom/repo/grype-repo.sarif

      - name: Upload SARIF (repo vulns)
        if: always() && hashFiles('artifacts/sbom/repo/grype-repo.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: artifacts/sbom/repo/grype-repo.sarif
          category: repo-sbom-grype

  image-sbom:
    name: Generate SBOM (image)
    runs-on: ubuntu-latest
    needs: repo-sbom
    if: |
      hashFiles('Dockerfile') != '' || hashFiles('docker/Dockerfile') != ''
    env:
      OUT_DIR: artifacts/sbom/image
      IMAGE_NAME: kfm-sbom:${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Dockerfile path
        id: df
        run: |
          if [ -f Dockerfile ]; then
            echo "path=Dockerfile" >> "$GITHUB_OUTPUT"
          elif [ -f docker/Dockerfile ]; then
            echo "path=docker/Dockerfile" >> "$GITHUB_OUTPUT"
          else
            echo "No Dockerfile found" >&2
            exit 1
          fi

      - name: Build image (local)
        run: docker build -f "${{ steps.df.outputs.path }}" -t "${IMAGE_NAME}" .

      - name: Setup Syft
        uses: anchore/syft-action/setup-syft@v1

      - name: Ensure output dir
        run: mkdir -p "$OUT_DIR"

      - name: Create CycloneDX (image)
        run: syft "${IMAGE_NAME}" -o cyclonedx-json="${OUT_DIR}/sbom.image.cdx.json"

      - name: Create SPDX (image)
        run: syft "${IMAGE_NAME}" -o spdx-json="${OUT_DIR}/sbom.image.spdx.json"

      - name: Quick stats to Job Summary
        run: |
          echo "## Image SBOM" >> "$GITHUB_STEP_SUMMARY"
          wc -c "${OUT_DIR}/sbom.image.cdx.json" | awk '{print "- CycloneDX size:", $1, "bytes"}' >> "$GITHUB_STEP_SUMMARY"
          wc -c "${OUT_DIR}/sbom.image.spdx.json" | awk '{print "- SPDX size:", $1, "bytes"}' >> "$GITHUB_STEP_SUMMARY"

      - name: Upload SBOM artifacts (image)
        uses: actions/upload-artifact@v4
        with:
          name: sbom-image-${{ github.sha }}
          path: artifacts/sbom/image
          if-no-files-found: error
          retention-days: 14

      - name: Attest SBOM artifacts (image)
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: artifacts/sbom/image/**

      - name: (Optional) Vulnerability scan (image – Grype)
        uses: anchore/scan-action@v4
        with:
          image: ${{ env.IMAGE_NAME }}
          fail-build: false
          severity-cutoff: high
          output-format: sarif
          output-file: artifacts/sbom/image/grype-image.sarif

      - name: Upload SARIF (image vulns)
        if: always() && hashFiles('artifacts/sbom/image/grype-image.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: artifacts/sbom/image/grype-image.sarif
          category: image-sbom-grype

  release-attach:
    name: Attach SBOMs to Release (tag builds)
    runs-on: ubuntu-latest
    needs: [repo-sbom, image-sbom]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download SBOM artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: sbom-*
          merge-multiple: true
          path: ./_all_sboms

      - name: Attach to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            _all_sboms/**/*.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}