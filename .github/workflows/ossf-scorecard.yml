name: "Security — OpenSSF Scorecard"

on:
  push:
    branches: [ "main", "release/*" ]
  pull_request:
    branches: [ "main", "release/*" ]
  schedule:
    - cron: "0 7 * * 1"   # Mondays at 07:00 UTC
  workflow_dispatch:

# Least-privilege for code scanning & OIDC upload
permissions:
  contents: read
  security-events: write    # upload SARIF
  actions: read
  id-token: write           # publish_results to OpenSSF (OIDC)

jobs:
  scorecard:
    name: OpenSSF Scorecard
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Cache GitHub API responses used by Scorecard to speed up repeated runs
      - name: Restore Scorecard cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ossf-scorecard
          key: ossf-scorecard-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ossf-scorecard-${{ runner.os }}-${{ github.ref }}-
            ossf-scorecard-${{ runner.os }}-

      # Run OpenSSF Scorecard (pinned to a specific version)
      - name: Run Scorecard
        id: scorecard
        uses: ossf/scorecard-action@v2.3.1
        with:
          results_file: scorecard.sarif
          results_format: sarif         # also supports 'json'
          # Set to 'true' to publish results to the OpenSSF API for badges/aggregations
          publish_results: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      # Upload SARIF to GitHub code scanning so findings appear under
      # Security → Code scanning alerts
      - name: Upload SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scorecard.sarif

      # Optionally also keep the SARIF as a build artifact
      - name: Upload Scorecard artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ossf-scorecard-${{ github.sha }}
          path: scorecard.sarif
          retention-days: 14
