# .github/workflows/web-config-validate.yml
name: Web Config Validate

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "web/app.config.json"
      - "web/layers.json"
      - "web/config/**/*.json"
      - "tests/test_web_configs.py"
      - ".github/workflows/web-config-validate.yml"
  pull_request:
    paths:
      - "web/app.config.json"
      - "web/layers.json"
      - "web/config/**/*.json"
      - "tests/test_web_configs.py"
      - ".github/workflows/web-config-validate.yml"

concurrency:
  group: web-config-validate-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  validate:
    name: JSON & Schema Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show changed files (PR only)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Changed files (vs ${{ github.base_ref }}):"
          git --no-pager diff --name-only origin/${{ github.base_ref }}... | sed 's/^/ - /' || true

      # Ensure jq is present (usually available, but make explicit for stability)
      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Validate JSON syntax with jq
        shell: bash
        run: |
          set -euo pipefail
          had_any=false
          summary="### JSON syntax check\n"

          check_file () {
            local f="$1"
            if [[ -f "$f" ]]; then
              had_any=true
              echo "Checking JSON syntax: $f"
              if jq -e . "$f" >/dev/null 2>&1; then
                summary+="- ✅ $f\n"
              else
                summary+="- ❌ $f\n"
                echo "::error file=$f::Invalid JSON"
                exit 1
              fi
            fi
          }

          # Single-file checks
          check_file web/app.config.json
          check_file web/layers.json

          # Nested configs
          shopt -s nullglob globstar
          found=false
          for f in web/config/**/*.json; do
            found=true
            check_file "$f"
          done

          if [[ "$had_any" = false ]]; then
            echo "No web config JSON files present to validate."
            summary+="(No web config JSON files present)\n"
          fi

          # Write summary for job UI
          echo -e "$summary" >> "$GITHUB_STEP_SUMMARY"

      - name: Set up Python (3.11)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          if [[ -f requirements-dev.txt ]]; then
            pip install -r requirements-dev.txt
          elif [[ -f requirements.txt ]]; then
            pip install -r requirements.txt
          fi
          # Always ensure these exist for schema/tests
          pip install pytest jsonschema

          # If project is installable, add it (with extras) so tests can import local code
          if [[ -f pyproject.toml || -f setup.cfg || -f setup.py ]]; then
            # Try dev extras if declared, otherwise plain editable install
            pip install -e ".[dev]" || pip install -e .
          fi

      - name: Run pytest (web config tests)
        run: |
          set -euo pipefail
          if [[ -f tests/test_web_configs.py ]]; then
            pytest -q tests/test_web_configs.py --junitxml=pytest-web-configs.xml
          else
            # Fallback: keyword-based selection if the file was renamed/moved
            pytest -q -k "web_configs" --junitxml=pytest-web-configs.xml
          fi

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-web-configs-${{ github.run_id }}
          path: pytest-web-configs.xml
          if-no-files-found: warn
          retention-days: 14