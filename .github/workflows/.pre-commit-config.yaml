# .github/workflows/.pre-commit-config.yaml
# Kansas-Frontier-Matrix â€” CI Pre-Commit Hooks
# ------------------------------------------------
# CI-focused hooks for schema validation, STAC integrity,
# Python style, JSON/YAML correctness, and docs hygiene.
# Mirrors key checks from the root config, but kept lean for CI.

minimum_pre_commit_version: "3.6.0"

default_language_version:
  # Keep aligned with CI; Python hooks will run in their own venvs.
  python: python3

# CI runs on push; keep commit-time UX concerns out of this file.
default_stages: [push]

# Skip heavy/binary paths when hooks support "exclude"
exclude: |
  (?x)^(
    data/(processed|cogs|outputs|raw)/|
    assets/(tiles|images|fonts)/|
    web/(dist|build|tiles|assets)/|
    (?:^|.*/)?node_modules/|
    (?:^|.*/)?dist/|
    build/|
    _site/|
    earth/|
    docs/_build/|
    \.venv/|
    \.mypy_cache/|
    \.ruff_cache/|
    \.pytest_cache/|
    .*\.ipynb_checkpoints/|
    .*\.pmtiles$|
    .*\.mbtiles$|
    .*\.tif{1,2}$|
    .*\.la[sz]$|
    .*\.gpkg$|
    .*\.parquet$|.*\.geoparquet$|
    .*\.7z$|.*\.zip$|.*\.tar(\.gz)?$|.*\.zst$|
    .*\.pdf$
  )

repos:
  # --- Core file hygiene -----------------------------------------------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-added-large-files
        # CI threshold aligns with root (LFS/DVC gate)
        args: ["--maxkb=5000"]
      - id: detect-private-key
      - id: trailing-whitespace
      - id: end-of-file-fixer

  # --- Python: formatting + linting -----------------------------------------
  # NOTE: upstream moved from charliermarsh -> astral-sh
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        args: ["--fix"]
      - id: ruff-format

  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        # Keep CI Python aligned with workflows (3.11 OK too);
        # black doesn't require pin here, but we set a sane default.
        language_version: python3.10

  # --- Shell scripts ---------------------------------------------------------
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # --- Markdown (keep simple for CI) ----------------------------------------
  # Use the Node CLI variant; avoids ruby deps collisions in CI images.
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.41.0
    hooks:
      # Correct hook id for this repo is "markdownlint"
      - id: markdownlint
        args: ["--fix"]
        # Include repo docs + root README + web docs
        files: "(^README\\.md$)|(^docs/.*\\.(md|markdown)$)|(^web/.*\\.(md|markdown)$)"

  # --- STAC validation (self-contained for CI) -------------------------------
  # Use a Python hook so CI doesn't need global installs.
  - repo: local
    hooks:
      - id: stac-validate
        name: STAC Validator (kgt if available; else stac-validator)
        language: python
        additional_dependencies: ["stac-validator>=3.3.0"]
        pass_filenames: false
        files: "^stac/.*\\.json$"
        entry: >
          python - <<'PY'
          import os, sys, shutil, json, subprocess
          from pathlib import Path
          def run(cmd):
            try:
              return subprocess.run(cmd, check=True, text=True)
            except subprocess.CalledProcessError as e:
              return e

          root = Path("stac")
          if not root.exists():
            print("::notice::No stac/ directory found; skipping.")
            sys.exi
