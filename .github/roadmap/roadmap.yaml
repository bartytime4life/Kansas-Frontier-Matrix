# ==============================================================================
# Kansas-Frontier-Matrix — Declarative Roadmap (→ Issues & Milestones)
# Consumed by .github/workflows/roadmap.yml to sync labels, milestones, issues.
# Colors are 6-hex (no '#'), as GitHub's API expects.
# ==============================================================================

version: 1
project: "Kansas Geo Timeline"
owner: "bartytime4life"

# Optional enums your sync script can use for validation / normalization
enums:
  priorities: [P1, P2, P3]
  estimates:  [XS, S, M, L, XL]

defaults:
  create_missing_labels: true
  create_missing_milestones: true
  close_missing_issues: false
  dry_run: false
  issue:
    state: open
    assignees: []
    labels: []
    priority: P2
    estimate: M

# ------------------------------------------------------------------------------
# Labels (idempotent): updated/created by color/description.
# ------------------------------------------------------------------------------

labels:
  - name: data
    color: "1f77b4"
    description: "Datasets, ingestion, sources"
  - name: hydrology
    color: "17becf"
    description: "Water, flood, irrigation, aquifer"
  - name: paleoclimate
    color: "bcbd22"
    description: "Tree rings, pollen, charcoal, proxies"
  - name: ai
    color: "9467bd"
    description: "NLP, CV, geospatial ML, modeling"
  - name: uncertainty
    color: "7f7f7f"
    description: "UQ, calibration, confidence, error bars"
  - name: ontology
    color: "8c564b"
    description: "CIDOC-CRM, GeoSciML, KG, RDF/OWL"
  - name: fractals
    color: "e377c2"
    description: "Fractals, scaling laws, clustering"
  - name: storytelling
    color: "ff7f0e"
    description: "Narrative modules, timeline, glossary"
  - name: crowdsourcing
    color: "2ca02c"
    description: "Submission portal, contributor flow"
  - name: 3d
    color: "d62728"
    description: "CesiumJS, KML/KMZ, time-dynamic"
  - name: api
    color: "00b5ad"
    description: "REST/GraphQL, downloads"
  - name: architecture
    color: "111111"
    description: "Modularity, plugins, ext points"
  - name: reproducibility
    color: "9edae5"
    description: "STAC validation, CI/CD"
  - name: MCP
    color: "6e6ef7"
    description: "Master Coder Protocol artifacts"
  - name: education
    color: "c49c94"
    description: "UI literacy, public comms"

# ------------------------------------------------------------------------------
# Milestones → GitHub Milestones (with issues that create/update GH Issues).
# Each milestone and issue includes a stable 'key' for idempotent sync.
# ------------------------------------------------------------------------------

milestones:
  - key: m1-data
    title: "Milestone 1 — Enrich Data Sources"
    state: open
    due_on: "2025-10-31"
    description: >
      Expand coverage: oral histories, paleoclimate proxies, hydrology & water management.
      Document sources and provenance in STAC catalog.
    issues:
      - key: oral-histories
        title: "Oral Histories & Indigenous Narratives"
        labels: [data, storytelling, MCP]
        priority: P2
        estimate: S
        body: |
          ### Goal
          Integrate oral history archives with geocoded map links and contextual popups.

          ### Tasks
          - [ ] Identify oral history archives (tribal, local historical societies, KHRI)
          - [ ] Digitize + geocode transcripts (MCP `experiment.md`)
          - [ ] Link narratives to features with glossary tooltips
          - [ ] Document sources in `data/sources/oral_histories.json`

          ### Deliverables
          - `data/sources/oral_histories.json` with license, contact, update cadence
          - Initial story map tie-ins (timeline + glossary)
        files:
          - data/sources/oral_histories.json

      - key: paleo-fire
        title: "Paleoclimate & Fire Regimes"
        labels: [data, paleoclimate]
        priority: P2
        estimate: M
        body: |
          ### Goal
          Bring in drought indices, pollen cores, and charcoal/fire records for environmental context.

          ### Tasks
          - [ ] Integrate NOAA/USDM drought indices and station normals
          - [ ] Add pollen/charcoal/fire records (Neotoma, state archives)
          - [ ] Cross-link KGS/Neotoma paleo records
          - [ ] `data/sources/paleoclimate.json` with provenance

          ### Deliverables
          - `data/sources/paleoclimate.json` sources + STAC registration
        files:
          - data/sources/paleoclimate.json

      - key: hydro-expansion
        title: "Hydrology & Water Management Expansion"
        labels: [data, hydrology]
        priority: P2
        estimate: M
        body: |
          ### Goal
          Enrich water datasets and prototype flood scenarios.

          ### Tasks
          - [ ] Add flood event datasets (NOAA Storm Events, FEMA declarations)
          - [ ] Add irrigation/management layers (canals, diversions where public)
          - [ ] Prototype HEC-RAS historical flood scenarios (MCP modeling SOP)
          - [ ] STAC registration for hydrology items/collections
          - [ ] Wire Makefile + viewer to load layers

          ### Deliverables
          - `data/sources/hydrology.json` endpoints + licenses
          - FEMA + SPC + USDM entries in `data/sources/` as needed
          - Hydrology STAC Items/Collections and web layers
        files:
          - data/sources/hydrology.json

      - key: kgs-kansas-river
        title: "Kansas River (KGS) Integration — Source → STAC → Viewer"
        labels: [data, hydrology, reproducibility]
        priority: P1
        estimate: S
        body: |
          ### Goal
          Incorporate KGS Kansas River map as a first-class hydrology layer: source descriptor, STAC
          collection/items, fetch/export, and viewer overlays.

          ### Tasks
          - [ ] Source: `data/sources/ks_kansas_river.json` (ArcGIS REST + metadata)
          - [ ] STAC: `stac/collections/ks_kansas_river.json` (+ child link in `stac/collections/vectors.json`)
          - [ ] STAC Items: `stac/items/ks_kansas_river_channels.json`, `..._floodplains.json`, `..._gauges.json`
          - [ ] Makefile: `hydrology-fetch`, `hydrology-stac`, `hydrology` (meta), `site-hydrology`
          - [ ] Web: `web/layers.json` + `web/app.config.json` entries (`ksriv-*`)
          - [ ] CI: add job to run `make hydrology` with test endpoints (dry-run if needed)

          ### Deliverables
          - End-to-end: source → export (GeoJSON) → STAC-wired → visible in preview
        files:
          - data/sources/ks_kansas_river.json
          - stac/collections/ks_kansas_river.json
          - stac/items/ks_kansas_river_channels.json
          - stac/items/ks_kansas_river_floodplains.json
          - stac/items/ks_kansas_river_gauges.json
          - data/processed/hydrology/kansas_river/channels.geojson
          - data/processed/hydrology/kansas_river/floodplains.geojson
          - data/processed/hydrology/kansas_river/gauges.geojson
          - web/layers.json
          - web/app.config.json
          - Makefile

  - key: m2-analytics
    title: "Milestone 2 — Analytical Enhancements"
    state: open
    due_on: "2025-11-30"
    description: >
      Predictive modeling, uncertainty, symbolic reasoning, fractal/pattern analytics.
    issues:
      - key: predictive-modeling
        title: "Predictive Modeling"
        labels: [ai]
        priority: P2
        estimate: L
        body: |
          ### Goal
          Predict likely settlement sites using environmental drivers.

          ### Tasks
          - [ ] Train model on DEM, hydrology, soils, land cover + known sites
          - [ ] Log in `mcp/experiments/EXP-SETTLE-PRED.md`
          - [ ] Explore Bayesian + hybrid ABM/GIS variants

          ### Deliverables
          - Reproducible notebook + MCP experiment log
        files:
          - mcp/experiments/EXP-SETTLE-PRED.md

      - key: uncertainty-quant
        title: "Uncertainty Quantification"
        labels: [uncertainty]
        priority: P1
        estimate: M
        body: |
          ### Goal
          Make uncertainty first-class in georeferencing, NLP, and map rectification.

          ### Tasks
          - [ ] Confidence scores for NLP toponyms
          - [ ] Georeferencing RMS/error reporting, rectification logs
          - [ ] UI display: opacity/error bars/CI shading

      - key: symbolic-reasoning
        title: "Symbolic & Knowledge-Based Reasoning"
        labels: [ontology, ai]
        priority: P2
        estimate: M
        body: |
          ### Goal
          Add CIDOC-CRM + GeoSciML ontologies and legal/treaty inference rules.

          ### Tasks
          - [ ] Define core ontology schema and identity strategy (Wikidata)
          - [ ] Implement rules for treaty/legal land transfers
          - [ ] Export RDF/OWL snapshots

      - key: fractal-patterns
        title: "Fractal & Pattern Analysis"
        labels: [fractals, ai]
        priority: P3
        estimate: S
        body: |
          ### Goal
          Quantify scaling and self-similarity in rivers, fires, and settlement clusters.

          ### Tasks
          - [ ] Meander fractal dimension and sinuosity metrics
          - [ ] Power-law analysis on event/migration frequencies
          - [ ] Cluster scaling vs hydro-geomorphology

  - key: m3-story
    title: "Milestone 3 — Storytelling & Education"
    state: open
    due_on: "2025-12-31"
    description: >
      Public-facing narrative modules, educational overlays, glossary tooltips, and submission portal.
    issues:
      - key: sft-storymap
        title: "Interactive Story Maps — Santa Fe Trail"
        labels: [storytelling, education]
        priority: P2
        estimate: M
        body: |
          ### Goal
          Build narrative module for Santa Fe Trail with timeline & sources.

          ### Tasks
          - [ ] Assemble trail route layers + primary sources
          - [ ] Timeline UI + step-through views
          - [ ] Educator notes + glossary links

      - key: dustbowl-timeline
        title: "Dust Bowl Timeline Prototype"
        labels: [storytelling, education]
        priority: P3
        estimate: S
        body: |
          ### Goal
          Blend 1930s climate, newspaper archives, soils, and land use.

          ### Tasks
          - [ ] Collect climate + newspaper datasets
          - [ ] Compose time-series map overlays
          - [ ] Add uncertainty annotations

      - key: glossary-annotations
        title: "Glossary & Educational Annotations"
        labels: [education, MCP]
        priority: P3
        estimate: S
        body: |
          ### Goal
          Link MCP glossary into tooltips and overlays.

          ### Tasks
          - [ ] Embed glossary lookups in popups
          - [ ] Author overlays for railroads, treaties, forts, migration

      - key: crowdsourcing-portal
        title: "Crowdsourcing Submission Portal"
        labels: [crowdsourcing]
        priority: P3
        estimate: M
        body: |
          ### Goal
          Lower barrier for community contributions (web form → GitHub PR).

          ### Tasks
          - [ ] Build web form with metadata/consent checks
          - [ ] PR bot to format submissions
          - [ ] `docs/CONTRIBUTING.md` contributor guide

  - key: m4-tech
    title: "Milestone 4 — Technical Enhancements"
    state: open
    description: >
      3D/temporal, semantic web, modular plugins, APIs, and download endpoints.
    issues:
      - key: time-3d
        title: "3D Time Animation"
        labels: [3d]
        priority: P3
        estimate: M
        body: |
          ### Goal
          CesiumJS prototype and regionated KML/KMZ export for Google Earth.

          ### Tasks
          - [ ] CesiumJS time-dynamic scene (1850–present)
          - [ ] Regionated KML/KMZ exports

      - key: semantic-web
        title: "Semantic Web Integration"
        labels: [ontology, api]
        priority: P3
        estimate: S
        body: |
          ### Goal
          Publish internal knowledge graph with entity linking.

          ### Tasks
          - [ ] Map entities to Wikidata; export RDF
          - [ ] SPARQL/GraphQL access (if feasible)

      - key: modularity
        title: "Modularity & Extensibility"
        labels: [architecture]
        priority: P2
        estimate: M
        body: |
          ### Goal
          Refactor ingestion/AI/UI into plugins, document extension points.

          ### Tasks
          - [ ] Define plugin API boundaries
          - [ ] `docs/architecture.md` extension sections

      - key: apis-downloads
        title: "APIs & External Tools"
        labels: [api]
        priority: P3
        estimate: S
        body: |
          ### Goal
          Provide REST/GraphQL endpoints, enable GeoJSON/CSV download.

          ### Tasks
          - [ ] Dataset catalog endpoints
          - [ ] Download endpoints (GeoJSON/CSV)

  - key: m5-mcp
    title: "Milestone 5 — MCP Integration"
    state: open
    description: >
      Experiments, SOPs, model cards, and CI/STAC validation for mission-grade reproducibility.
    issues:
      - key: experiments-first-3
        title: "Experiment Reports (First Three)"
        labels: [MCP, reproducibility]
        priority: P2
        estimate: S
        body: |
          ### Goal
          Adopt MCP experiment template and log three initial experiments.

          ### Tasks
          - [ ] `mcp/experiments/experiment_template.md` in use
          - [ ] Georeferencing experiment
          - [ ] NLP place extraction experiment
          - [ ] Predictive settlement modeling experiment

      - key: sop-docs
        title: "SOP Documentation"
        labels: [MCP]
        priority: P3
        estimate: S
        body: |
          ### Goal
          Create MCP SOPs for repeatability.

          ### Tasks
          - [ ] `mcp/sops/georeference_map.md`
          - [ ] `mcp/sops/add_dataset.md`

      - key: model-cards
        title: "Model Cards"
        labels: [MCP, ai]
        priority: P3
        estimate: S
        body: |
          ### Goal
          Transparent model documentation.

          ### Tasks
          - [ ] `mcp/model_cards/nlp_placename.md`
          - [ ] `mcp/model_cards/change_detection.md`

      - key: ci-repro
        title: "CI/CD Reproducibility"
        labels: [reproducibility]
        priority: P2
        estimate: S
        body: |
          ### Goal
          Automated STAC validation and reproducibility check target.

          ### Tasks
          - [ ] GitHub Actions job to validate STAC JSON
          - [ ] `make reproducibility` target