version: "3.9"

x-env-defaults: &env_defaults
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONUNBUFFERED: "1"
  GDAL_DISABLE_READDIR_ON_OPEN: "YES"
  VSI_CACHE: "TRUE"
  VSI_CACHE_SIZE: "1000000"
  PROJ_NETWORK: "ON"

services:
  kfm:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        # matches Dockerfile default; override here if you need a pinned tag
        GDAL_IMAGE: ghcr.io/osgeo/gdal:ubuntu-small-latest
        # optional: pass host UID/GID to match file ownership (see "user" below)
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    image: kfm:latest
    container_name: kfm
    working_dir: /app
    # Mount the repo so edits are live inside the container
    volumes:
      - ./:/app
    # Map container user to your host UID/GID to avoid root-owned files
    user: "${UID:-1000}:${GID:-1000}"
    environment:
      <<: *env_defaults
    # keep temp IO fast; avoids polluting the bind mount with temp files
    tmpfs:
      - /tmp:size=512m,mode=1777
    tty: true
    stdin_open: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-lc", "gdalinfo --version >/dev/null 2>&1"]
      interval: 60s
      timeout: 5s
      retries: 3

  # Simple HTTP server for local preview of web/
  site:
    profiles: ["dev"]            # start with: docker compose --profile dev up site
    image: kfm:latest            # reuse the same image (has Python)
    working_dir: /app/web
    depends_on:
      kfm:
        condition: service_started
    command: ["bash", "-lc", "python -m http.server 8080"]
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
    user: "${UID:-1000}:${GID:-1000}"
    environment:
      <<: *env_defaults
    restart: unless-stopped
