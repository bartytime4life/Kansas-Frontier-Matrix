version: "3.9"

# Reusable environment knobs
x-env-defaults: &env_defaults
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONUNBUFFERED: "1"
  GDAL_DISABLE_READDIR_ON_OPEN: "YES"
  VSI_CACHE: "TRUE"
  VSI_CACHE_SIZE: "1000000"
  PROJ_NETWORK: "ON"

services:
  # Main toolbox container (GDAL + Python + your repo bind-mounted)
  kfm:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        # Keep overridable; avoids stale base images pin
        GDAL_IMAGE: ghcr.io/osgeo/gdal:ubuntu-small-latest
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    image: kfm:latest
    container_name: kfm
    platform: linux/amd64          # stable across Apple Silicon/CI
    working_dir: /app
    volumes:
      - ./:/app                    # live-edit the repo
    user: "${UID:-1000}:${GID:-1000}"
    environment:
      <<: *env_defaults
    tmpfs:
      - /tmp:size=512m,mode=1777   # fast temp IO
      - /var/tmp:size=256m,mode=1777
    tty: true
    stdin_open: true
    init: true                     # better signal handling than PID 1 bash
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-lc", "gdalinfo --version >/dev/null 2>&1"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 20s            # give GDAL/proj time to settle

  # Tiny HTTP server to preview ./web (dev-only)
  site:
    profiles: ["dev"]              # start with: docker compose --profile dev up site
    image: kfm:latest              # reuse the same tool image
    platform: linux/amd64
    working_dir: /app/web
    depends_on:
      kfm:
        condition: service_healthy
    command: ["bash", "-lc", "python -m http.server 8080"]
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
    user: "${UID:-1000}:${GID:-1000}"
    environment:
      <<: *env_defaults
    restart: unless-stopped
