#!/usr/bin/env bash
# ------------------------------------------------------------------------------
# gen_sha256.sh — robust SHA-256 writer + verifier (Linux/macOS)
#
# Usage:
#   scripts/gen_sha256.sh [PATH/TO/FILE.tif]
#   # defaults to data/cogs/dem/ks_1m_dem_2018_2020.tif
#
# Outputs:
#   - <file>.sha256     # "HASH␠␠FILENAME" format (compatible with -c)
#   - prints STAC-ready lines for file:size and file:checksum
# ------------------------------------------------------------------------------

set -euo pipefail

# ---- Inputs ------------------------------------------------------------------
DEM="${1:-data/cogs/dem/ks_1m_dem_2018_2020.tif}"
DIR="$(cd "$(dirname "$DEM")" && pwd)"
BASE="$(basename "$DEM")"
OUT="${DEM%.tif}.sha256"

[[ -f "$DEM" ]] || { echo "❌ Missing: $DEM" >&2; exit 1; }

# ---- Tool detection ----------------------------------------------------------
hash_cmd=""
if command -v sha256sum >/dev/null 2>&1; then
  hash_cmd="sha256sum"
elif command -v gsha256sum >/dev/null 2>&1; then
  # Homebrew coreutils on macOS
  hash_cmd="gsha256sum"
elif command -v shasum >/dev/null 2>&1; then
  hash_cmd="shasum -a 256"
else
  echo "❌ Neither sha256sum/gsha256sum/shasum available." >&2
  echo "   Install coreutils (Linux) or 'brew install coreutils' (macOS)." >&2
  exit 1
fi

# ---- File size (Linux/macOS) -------------------------------------------------
file_size() {
  if stat --version >/dev/null 2>&1; then
    # GNU stat (Linux)
    stat -c %s "$1"
  else
    # BSD stat (macOS)
    stat -f %z "$1"
  fi
}

# ---- Compute checksum --------------------------------------------------------
echo "• Hashing $DEM ..."
cd "$DIR"
# Write in checker-friendly format: "HASH␠␠FILENAME"
$hash_cmd "$BASE" > "$(basename "$OUT")"

# ---- Verify (using same tool) ------------------------------------------------
echo "• Verifying ..."
if [[ "$hash_cmd" == "sha256sum" || "$hash_cmd" == "gsha256sum" ]]; then
  sha_tool="${hash_cmd}"
  $sha_tool -c "$(basename "$OUT")" >/dev/null
else
  # shasum supports -c with the same format
  shasum -a 256 -c "$(basename "$OUT")" >/dev/null
fi

SIZE_BYTES="$(file_size "$BASE")"
HEX="$(cut -d' ' -f1 < "$(basename "$OUT")")"

echo "✅ Wrote $(basename "$OUT") and verified."
echo
echo "STAC patch (copy these into your Item 'assets.cog'):"
echo "  \"file:size\": ${SIZE_BYTES},"
echo "  \"file:checksum\": \"sha256:${HEX}\""