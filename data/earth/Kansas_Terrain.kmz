#!/usr/bin/env bash
# scripts/make_kmz_kansas_terrain.sh
# Build a reproducible KMZ containing doc.kml + networklinks (optionally overlays)

set -euo pipefail

ROOT="$(git rev-parse --show-toplevel 2>/dev/null || pwd -P)"
EARTH="$ROOT/data/earth"
OUT="$EARTH/Kansas_Terrain.kmz"

DOC="$EARTH/doc.kml"
NL_HS="$EARTH/networklinks/ks_1m_hillshade.kml"
NL_USGS="$EARTH/networklinks/usgs_topo_1894.kml"
OV_HS="$EARTH/overlays/ks_1m_hillshade.kmz"
OV_USGS="$EARTH/overlays/usgs_topo_larned_1894.kmz"

# --- Required inputs ---------------------------------------------------------
for f in "$DOC" "$NL_HS" "$NL_USGS"; do
  [[ -f "$f" ]] || { echo "Missing: $f" >&2; exit 1; }
done

# --- Optional: include regionated overlays inside the KMZ --------------------
INCLUDE_OVERLAYS="${INCLUDE_OVERLAYS:-0}"  # set to 1 to embed overlays
if [[ "$INCLUDE_OVERLAYS" == "1" ]]; then
  for f in "$OV_HS" "$OV_USGS"; do
    [[ -f "$f" ]] || { echo "Missing overlay (set INCLUDE_OVERLAYS=0 to skip): $f" >&2; exit 1; }
  done
fi

# --- Sanity: ensure NetworkLinks use relative hrefs we expect ----------------
# We keep links portable by ensuring they point to ../networklinks/* from doc.kml’s POV,
# and networklinks/*.kml point to ../overlays/*.kmz (or absolute URLs only if intentional).
fix_href_rel() {
  local file="$1"
  # if an absolute URL slipped in, comment it and add a relative href beneath
  if grep -qE '<href>https?://[^<]+' "$file"; then
    cp "$file" "${file}.bak"
    awk '
      /<href>https?:\/\// && !seen++ {
        print "<!-- " $0 " (commented for portability) -->";
        next
      }
      { print }
    ' "${file}.bak" > "$file"
  fi
}
fix_href_rel "$NL_HS"
fix_href_rel "$NL_USGS"

# --- Validate XML (best-effort) ---------------------------------------------
if command -v xmllint >/dev/null 2>&1; then
  xmllint --noout "$DOC"
  xmllint --noout "$NL_HS"
  xmllint --noout "$NL_USGS"
fi

# --- Stage minimal KMZ payload ----------------------------------------------
STAGE="$(mktemp -d -t kansas_kmz_XXXXXX)"
trap 'rm -rf "$STAGE"' EXIT

mkdir -p "$STAGE/networklinks"
install -m 0644 "$DOC"     "$STAGE/doc.kml"
install -m 0644 "$NL_HS"   "$STAGE/networklinks/ks_1m_hillshade.kml"
install -m 0644 "$NL_USGS" "$STAGE/networklinks/usgs_topo_1894.kml"

if [[ "$INCLUDE_OVERLAYS" == "1" ]]; then
  mkdir -p "$STAGE/overlays"
  install -m 0644 "$OV_HS"  "$STAGE/overlays/ks_1m_hillshade.kmz"
  install -m 0644 "$OV_USGS" "$STAGE/overlays/usgs_topo_larned_1894.kmz"
fi

# --- Reproducible timestamps (optional) -------------------------------------
EPOCH="${SOURCE_DATE_EPOCH:-1731456000}" # 2024-11-13 00:00:00 UTC (arbitrary fixed)
find "$STAGE" -exec touch -h -t 202411130000 {} + || true

# --- Create deterministic KMZ (ZIP) -----------------------------------------
cd "$STAGE"
# -X strip extra file attrs; -9 max compression; sort ensures stable order
{ find . -type f | LC_ALL=C sort; } | sed 's|^\./||' \
  | zip -X -9 -@ Kansas_Terrain.kmz > /dev/null

# --- Move artifact + checksum ------------------------------------------------
mkdir -p "$EARTH"
mv -f "$STAGE/Kansas_Terrain.kmz" "$OUT"
( cd "$EARTH" && sha256sum Kansas_Terrain.kmz > Kansas_Terrain.kmz.sha256 )

echo "✅ Created $OUT"
echo "🔐 Checksum:"
cat "$EARTH/Kansas_Terrain.kmz.sha256"
