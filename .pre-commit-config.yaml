# ================================
# Kansas-Frontier-Matrix / MCP Repo
# .pre-commit-config.yaml
# ================================

minimum_pre_commit_version: "3.6.0"

ci:
  autofix_prs: true
  autoupdate_schedule: monthly

default_language_version:
  python: python3

# Skip heavy/binary trees when hooks support "exclude"
exclude: |
  (?x)^(
    data/(processed|cogs|outputs|raw)/|
    assets/tiles/|
    web/(dist|build)/|
    (?:^|.*/)?node_modules/|
    (?:^|.*/)?dist/|
    build/|
    _site/|
    earth/|
    docs/_build/
  )

repos:
  # --- Core hygiene (whitespace, EOLs, merge conflicts, etc.) ---------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        args: ["--maxkb=5000"]   # prevent >5MB accidental commits (use DVC/LFS instead)
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: debug-statements
      - id: detect-private-key
      - id: check-executables-have-shebang
      - id: name-tests-test

  # --- Ruff (fast lint + import sort) ---------------------------------------
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        name: ruff (lint)
        args: ["--fix"]
        types_or: [python]
        exclude: ^(notebooks/|docs/)
      - id: ruff-format
        name: ruff (format)
        types_or: [python]
        exclude: ^(notebooks/|docs/)

  # --- Black (optional alongside ruff-format) -------------------------------
  # You can delete this block if you go 100% with ruff-format.
  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        language_version: python3.10
        exclude: ^(notebooks/|docs/)

  # --- YAML / JSON / Markdown / Web assets ----------------------------------
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ["-d", "{extends: default, rules: {line-length: disable}}"]

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.3.3
    hooks:
      - id: prettier
        files: "\\.(json|jsonc|ya?ml|md|html?|css|js|ts|tsx)$"

  # --- pyproject.toml canonical formatting ----------------------------------
  - repo: https://github.com/tox-dev/pyproject-fmt
    rev: 2.3.1
    hooks:
      - id: pyproject-fmt

  # --- Jupyter notebooks (nbQA wrappers + strip outputs) --------------------
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.9.1
    hooks:
      - id: nbqa-ruff
        additional_dependencies: ["ruff==0.6.9"]
        args: ["--fix"]
        files: "\\.ipynb$"
      - id: nbqa-black
        additional_dependencies: ["black==24.8.0"]
        args: ["--nbqa-mutate"]
        files: "\\.ipynb$"
      - id: nbqa-isort
        additional_dependencies: ["isort==5.13.2"]
        args: ["--nbqa-mutate"]
        files: "\\.ipynb$"

  - repo: https://github.com/kynan/nbstripout
    rev: 0.6.1
    hooks:
      - id: nbstripout
        files: "\\.ipynb$"

  # --- Security / safety ----------------------------------------------------
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: ["-r", "src"]
        files: "^src/.*\\.py$"

  # NOTE: Use project metadata (-P) so audits work when there's no requirements.txt
  - repo: https://github.com/pypa/pip-audit
    rev: v2.7.3
    hooks:
      - id: pip-audit
        args: ["-P"]

  # --- GitHub Actions workflow linter ---------------------------------------
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.4
    hooks:
      - id: actionlint
        files: "^\\.github/workflows/.*\\.ya?ml$"

  # --- Git LFS check (ensure GIS/RS data tracked properly) ------------------
  - repo: https://github.com/boidolr/git-lfs-pre-commit
    rev: v0.3.3
    hooks:
      - id: git-lfs-check
        args:
          - "--pattern=*.tif,*.tiff,*.vrt,*.ovr,*.aux.xml,*.mbtiles,*.shp,*.dbf,*.shx,*.cpg,*.prj,*.gpkg,*.geoparquet,*.parquet,*.las,*.laz,*.zip,*.7z,*.tar,*.tar.gz,*.tgz,*.bz2,*.xz,*.zst"

  # --- Local project hooks (fast, optional) ---------------------------------
  - repo: local
    hooks:
      # Validate STAC Items with kgt if available; otherwise skip gracefully.
      - id: stac-validate
        name: STAC validate (kgt if present)
        language: system
        files: "^stac/items/.*\\.json$"
        pass_filenames: false
        entry: bash -c 'if command -v kgt >/dev/null 2>&1; then kgt validate-stac stac/items --no-strict; else echo "[skip] kgt not installed"; fi'

      # Quick JSON sanity for data/sources using jq if available.
      - id: sources-sanity
        name: data/sources JSON sanity (jq if present)
        language: system
        files: "^data/sources/.*\\.json$"
        pass_filenames: true
        entry: >
          bash -c '
            if ! command -v jq >/dev/null 2>&1; then
              echo "[skip] jq not installed"; exit 0; fi;
            ec=0;
            for f in "$@"; do
              jq -e "type==\"object\"" "$f" >/dev/null || { echo "::error::$f is not a valid top-level JSON object"; ec=1; };
            done;
            exit $ec
          '